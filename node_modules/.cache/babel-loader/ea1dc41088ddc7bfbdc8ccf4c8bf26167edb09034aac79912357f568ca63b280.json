{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStore = void 0;\nvar State_1 = require(\"./State\");\nvar notImplementedErrorMsg = [\"You must implement 'loadState' and 'saveState' to be able \", 'to save state to your preffered storage. E.g \\n', 'store.persist({ \\n', '    saveState: function(key, state, isInitialSet){/*logics to save state to storage*/}, \\n', '    loadState: function(key, noState){/*logics to load state from storage*/} \\n', '}) \\n'].join(\"\");\nvar Empty = /** @class */function () {\n  function Empty() {}\n  return Empty;\n}(); // Class for empty state/value\nvar EMPTY = new Empty();\nvar PersistentStorage = /** @class */function () {\n  function PersistentStorage() {\n    this.SHOULD_PERSIST_BY_DEFAULT = false;\n  }\n  PersistentStorage.prototype.loadState = function (key, noState) {\n    throw TypeError(notImplementedErrorMsg);\n  };\n  PersistentStorage.prototype.saveState = function (key, state, isInitialSet) {\n    throw TypeError(notImplementedErrorMsg);\n  };\n  return PersistentStorage;\n}();\nvar Store = /** @class */function () {\n  function Store(storeInitializer) {\n    this.states = new Map();\n    this.subscribers = [];\n    this.persistentStorage = new PersistentStorage();\n    if (storeInitializer) {\n      if (typeof storeInitializer === \"function\") {\n        storeInitializer = storeInitializer();\n      }\n      for (var key in storeInitializer) {\n        if (storeInitializer.hasOwnProperty(key)) {\n          this.setState(key, storeInitializer[key]);\n        }\n      }\n    }\n  }\n  Store.prototype.subscribe = function (observer) {\n    var _this = this;\n    if (this.subscribers.indexOf(observer) === -1) {\n      // Subscribe a component to this store\n      this.subscribers.push(observer);\n    }\n    var unsubscribe = function () {\n      _this.subscribers = _this.subscribers.filter(function (subscriber) {\n        return subscriber !== observer;\n      });\n    };\n    return unsubscribe;\n  };\n  Store.prototype.onStoreUpdate = function (key, value) {\n    this.subscribers.forEach(function (subscriber) {\n      subscriber(key, value);\n    });\n  };\n  Store.prototype.persist = function (config) {\n    if (config.saveState) {\n      this.persistentStorage.saveState = config.saveState;\n    }\n    if (config.loadState) {\n      this.persistentStorage.loadState = config.loadState;\n    }\n    if (config.removeState) {\n      this.persistentStorage.removeState = config.removeState;\n    }\n    if (config.clear) {\n      this.persistentStorage.clear = config.clear;\n    }\n    if (config.PERSIST_ENTIRE_STORE) {\n      this.persistentStorage.SHOULD_PERSIST_BY_DEFAULT = config.PERSIST_ENTIRE_STORE;\n    }\n  };\n  Store.prototype.setState = function (key, initialValue, _a) {\n    var _this = this;\n    var _b = _a === void 0 ? {} : _a,\n      persist = _b.persist;\n    var shouldPersist = persist === undefined ? this.persistentStorage.SHOULD_PERSIST_BY_DEFAULT : persist;\n    var shouldSaveToPersistentStorage = false;\n    if (shouldPersist) {\n      // Try to load state from persistent storage\n      var savedState = this.persistentStorage.loadState(key, EMPTY);\n      if (savedState !== EMPTY) {\n        // We have a saved state, so we use it as the initialValue\n        initialValue = savedState;\n      } else {\n        // We don't have a saved state so we have to set/save it\n        // Here we set this flag to true but we'll save later after creating a state successfully\n        shouldSaveToPersistentStorage = true;\n      }\n    }\n    var onStateChange = function (newValue) {\n      // Note key & persist variables depends on scope\n      _this.onStoreUpdate(key, newValue);\n      if (shouldPersist) {\n        _this.persistentStorage.saveState(key, newValue, false);\n      }\n    };\n    // Create a state\n    var state = (0, State_1.createState)(initialValue);\n    var unsubscribe = state.subscribe({\n      observer: onStateChange,\n      selector: function (st) {\n        return st;\n      }\n    });\n    var storeState = {\n      \"state\": state,\n      \"unsubscribe\": unsubscribe,\n      \"persist\": shouldPersist\n    };\n    // Add state to the store\n    this.states.set(key, storeState);\n    if (shouldSaveToPersistentStorage) {\n      // Saving state to persistent storage after we've created it successfully\n      this.persistentStorage.saveState(key, state.getValue(), true);\n    }\n  };\n  Store.prototype.getState = function (key, config) {\n    if (config === void 0) {\n      config = {};\n    }\n    var defaultValue;\n    if (config.hasOwnProperty('default')) {\n      // Use has set default explicitly\n      defaultValue = config.default;\n    } else {\n      // No default value\n      defaultValue = EMPTY;\n    }\n    // Get key based state\n    if (!this.has(key)) {\n      // state is not found\n      if (defaultValue !== EMPTY) {\n        // Default value is found\n        // Create a state and use defaultValue as the initial value\n        this.setState(key, defaultValue,\n        // Make sure we don't pass EMPTY value\n        {\n          persist: config.persist\n        });\n      } else {\n        // state is not found and the default value is not specified\n        var errorMsg = [\"There is no state with the key '\".concat(key, \"', \"), \"You are either trying to access a \", \"state that doesn't exist or it was deleted.\"];\n        throw Error(errorMsg.join(\"\"));\n      }\n    }\n    return this.states.get(key).state;\n  };\n  Store.prototype.has = function (key) {\n    // Check if we have a state in a store\n    return this.states.has(key);\n  };\n  Store.prototype.items = function () {\n    var storeItems = [];\n    this.states.forEach(function (storeState, key) {\n      storeItems.push([key, storeState.state.getValue(), storeState.persist]);\n    });\n    return storeItems;\n  };\n  Store.prototype.getStateValue = function (key, config) {\n    var state = this.getState(key, config);\n    return state.getValue(config.selector);\n  };\n  Store.prototype.clear = function (fn) {\n    var _this = this;\n    // Copy store\n    var storeCopy = this.states;\n    // Clear store\n    this.states = new Map();\n    if (this.persistentStorage.clear) {\n      this.persistentStorage.clear();\n    }\n    if (fn) {\n      // Run store re-initialization\n      fn();\n    }\n    storeCopy.forEach(function (oldState, key) {\n      // Unsubscribe from an old state \n      oldState.unsubscribe();\n      // Notify subscribers to a store that a state has been removed\n      if (_this.has(key)) {\n        var newState = _this.getState(key);\n        _this.onStoreUpdate(key, newState.getValue());\n      }\n      // Rerender all components using this state\n      oldState.state.refresh();\n    });\n  };\n  Store.prototype.remove = function (Statekey, fn) {\n    var _this = this;\n    var keys = [];\n    if (typeof Statekey === 'string') {\n      keys = [Statekey];\n    } else {\n      keys = Statekey;\n    }\n    var StatesToRemove = new Map();\n    keys.forEach(function (key) {\n      // Copy state to remove from a store\n      StatesToRemove.set(key, _this.states.get(key));\n      // Remove state from a store\n      _this.states.delete(key);\n      if (StatesToRemove.get(key).persist &&\n      // Is state persisted\n      _this.persistentStorage.removeState &&\n      // Is removeState Implemented\n      _this.persistentStorage.loadState(key, EMPTY) !== EMPTY // Is state to remove available\n      ) {\n        _this.persistentStorage.removeState(key);\n      }\n    });\n    if (fn) {\n      // Run state re-initialization\n      fn();\n    }\n    StatesToRemove.forEach(function (oldState, key) {\n      // Unsubscribe from an old state \n      oldState.unsubscribe();\n      // Notify subscribers to a store that a state has been removed\n      if (_this.has(key)) {\n        var newState = _this.getState(key);\n        _this.onStoreUpdate(key, newState.getValue());\n      }\n      // Rerender all components depending on this state\n      oldState.state.refresh();\n    });\n  };\n  Store.prototype.useState = function (key, config) {\n    if (config === void 0) {\n      config = {};\n    }\n    var storeStateConfig = config;\n    var stateConfig = config;\n    var state = this.getState(key, storeStateConfig);\n    return state.useState(stateConfig);\n  };\n  Store.prototype.useReducer = function (reducer, key, config) {\n    if (config === void 0) {\n      config = {};\n    }\n    var storeStateConfig = config;\n    var stateConfig = config;\n    var state = this.getState(key, storeStateConfig);\n    return state.useReducer(reducer, stateConfig);\n  };\n  return Store;\n}();\nexports.default = Store;\nfunction createStore(storeInitializer) {\n  // Create a store for key based state\n  return new Store(storeInitializer);\n}\nexports.createStore = createStore;","map":{"version":3,"names":["Object","defineProperty","exports","value","createStore","State_1","require","notImplementedErrorMsg","join","Empty","EMPTY","PersistentStorage","SHOULD_PERSIST_BY_DEFAULT","prototype","loadState","key","noState","TypeError","saveState","state","isInitialSet","Store","storeInitializer","states","Map","subscribers","persistentStorage","hasOwnProperty","setState","subscribe","observer","_this","indexOf","push","unsubscribe","filter","subscriber","onStoreUpdate","forEach","persist","config","removeState","clear","PERSIST_ENTIRE_STORE","initialValue","_a","_b","shouldPersist","undefined","shouldSaveToPersistentStorage","savedState","onStateChange","newValue","createState","selector","st","storeState","set","getValue","getState","defaultValue","default","has","errorMsg","concat","Error","get","items","storeItems","getStateValue","fn","storeCopy","oldState","newState","refresh","remove","Statekey","keys","StatesToRemove","delete","useState","storeStateConfig","stateConfig","useReducer","reducer"],"sources":["C:/Desktop/Hype It/18.5.23 responsive frontend/node_modules/state-pool/esm/Store.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createStore = void 0;\nvar State_1 = require(\"./State\");\nvar notImplementedErrorMsg = [\n    \"You must implement 'loadState' and 'saveState' to be able \",\n    'to save state to your preffered storage. E.g \\n',\n    'store.persist({ \\n',\n    '    saveState: function(key, state, isInitialSet){/*logics to save state to storage*/}, \\n',\n    '    loadState: function(key, noState){/*logics to load state from storage*/} \\n',\n    '}) \\n'\n].join(\"\");\nvar Empty = /** @class */ (function () {\n    function Empty() {\n    }\n    return Empty;\n}()); // Class for empty state/value\nvar EMPTY = new Empty();\nvar PersistentStorage = /** @class */ (function () {\n    function PersistentStorage() {\n        this.SHOULD_PERSIST_BY_DEFAULT = false;\n    }\n    PersistentStorage.prototype.loadState = function (key, noState) {\n        throw TypeError(notImplementedErrorMsg);\n    };\n    PersistentStorage.prototype.saveState = function (key, state, isInitialSet) {\n        throw TypeError(notImplementedErrorMsg);\n    };\n    return PersistentStorage;\n}());\nvar Store = /** @class */ (function () {\n    function Store(storeInitializer) {\n        this.states = new Map();\n        this.subscribers = [];\n        this.persistentStorage = new PersistentStorage();\n        if (storeInitializer) {\n            if (typeof storeInitializer === \"function\") {\n                storeInitializer = storeInitializer();\n            }\n            for (var key in storeInitializer) {\n                if (storeInitializer.hasOwnProperty(key)) {\n                    this.setState(key, storeInitializer[key]);\n                }\n            }\n        }\n    }\n    Store.prototype.subscribe = function (observer) {\n        var _this = this;\n        if (this.subscribers.indexOf(observer) === -1) {\n            // Subscribe a component to this store\n            this.subscribers.push(observer);\n        }\n        var unsubscribe = function () {\n            _this.subscribers = _this.subscribers.filter(function (subscriber) { return subscriber !== observer; });\n        };\n        return unsubscribe;\n    };\n    Store.prototype.onStoreUpdate = function (key, value) {\n        this.subscribers.forEach(function (subscriber) {\n            subscriber(key, value);\n        });\n    };\n    Store.prototype.persist = function (config) {\n        if (config.saveState) {\n            this.persistentStorage.saveState = config.saveState;\n        }\n        if (config.loadState) {\n            this.persistentStorage.loadState = config.loadState;\n        }\n        if (config.removeState) {\n            this.persistentStorage.removeState = config.removeState;\n        }\n        if (config.clear) {\n            this.persistentStorage.clear = config.clear;\n        }\n        if (config.PERSIST_ENTIRE_STORE) {\n            this.persistentStorage.SHOULD_PERSIST_BY_DEFAULT = config.PERSIST_ENTIRE_STORE;\n        }\n    };\n    Store.prototype.setState = function (key, initialValue, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, persist = _b.persist;\n        var shouldPersist = persist === undefined ?\n            this.persistentStorage.SHOULD_PERSIST_BY_DEFAULT : persist;\n        var shouldSaveToPersistentStorage = false;\n        if (shouldPersist) {\n            // Try to load state from persistent storage\n            var savedState = this.persistentStorage.loadState(key, EMPTY);\n            if (savedState !== EMPTY) {\n                // We have a saved state, so we use it as the initialValue\n                initialValue = savedState;\n            }\n            else {\n                // We don't have a saved state so we have to set/save it\n                // Here we set this flag to true but we'll save later after creating a state successfully\n                shouldSaveToPersistentStorage = true;\n            }\n        }\n        var onStateChange = function (newValue) {\n            // Note key & persist variables depends on scope\n            _this.onStoreUpdate(key, newValue);\n            if (shouldPersist) {\n                _this.persistentStorage.saveState(key, newValue, false);\n            }\n        };\n        // Create a state\n        var state = (0, State_1.createState)(initialValue);\n        var unsubscribe = state.subscribe({\n            observer: onStateChange,\n            selector: function (st) { return st; }\n        });\n        var storeState = {\n            \"state\": state,\n            \"unsubscribe\": unsubscribe,\n            \"persist\": shouldPersist\n        };\n        // Add state to the store\n        this.states.set(key, storeState);\n        if (shouldSaveToPersistentStorage) {\n            // Saving state to persistent storage after we've created it successfully\n            this.persistentStorage.saveState(key, state.getValue(), true);\n        }\n    };\n    Store.prototype.getState = function (key, config) {\n        if (config === void 0) { config = {}; }\n        var defaultValue;\n        if (config.hasOwnProperty('default')) {\n            // Use has set default explicitly\n            defaultValue = config.default;\n        }\n        else {\n            // No default value\n            defaultValue = EMPTY;\n        }\n        // Get key based state\n        if (!this.has(key)) { // state is not found\n            if (defaultValue !== EMPTY) { // Default value is found\n                // Create a state and use defaultValue as the initial value\n                this.setState(key, defaultValue, // Make sure we don't pass EMPTY value\n                { persist: config.persist });\n            }\n            else {\n                // state is not found and the default value is not specified\n                var errorMsg = [\n                    \"There is no state with the key '\".concat(key, \"', \"),\n                    \"You are either trying to access a \",\n                    \"state that doesn't exist or it was deleted.\"\n                ];\n                throw Error(errorMsg.join(\"\"));\n            }\n        }\n        return this.states.get(key).state;\n    };\n    Store.prototype.has = function (key) {\n        // Check if we have a state in a store\n        return this.states.has(key);\n    };\n    Store.prototype.items = function () {\n        var storeItems = [];\n        this.states.forEach(function (storeState, key) {\n            storeItems.push([key, storeState.state.getValue(), storeState.persist]);\n        });\n        return storeItems;\n    };\n    Store.prototype.getStateValue = function (key, config) {\n        var state = this.getState(key, config);\n        return state.getValue(config.selector);\n    };\n    Store.prototype.clear = function (fn) {\n        var _this = this;\n        // Copy store\n        var storeCopy = this.states;\n        // Clear store\n        this.states = new Map();\n        if (this.persistentStorage.clear) {\n            this.persistentStorage.clear();\n        }\n        if (fn) {\n            // Run store re-initialization\n            fn();\n        }\n        storeCopy.forEach(function (oldState, key) {\n            // Unsubscribe from an old state \n            oldState.unsubscribe();\n            // Notify subscribers to a store that a state has been removed\n            if (_this.has(key)) {\n                var newState = _this.getState(key);\n                _this.onStoreUpdate(key, newState.getValue());\n            }\n            // Rerender all components using this state\n            oldState.state.refresh();\n        });\n    };\n    Store.prototype.remove = function (Statekey, fn) {\n        var _this = this;\n        var keys = [];\n        if (typeof Statekey === 'string') {\n            keys = [Statekey];\n        }\n        else {\n            keys = Statekey;\n        }\n        var StatesToRemove = new Map();\n        keys.forEach(function (key) {\n            // Copy state to remove from a store\n            StatesToRemove.set(key, _this.states.get(key));\n            // Remove state from a store\n            _this.states.delete(key);\n            if (StatesToRemove.get(key).persist && // Is state persisted\n                _this.persistentStorage.removeState && // Is removeState Implemented\n                _this.persistentStorage.loadState(key, EMPTY) !== EMPTY // Is state to remove available\n            ) {\n                _this.persistentStorage.removeState(key);\n            }\n        });\n        if (fn) {\n            // Run state re-initialization\n            fn();\n        }\n        StatesToRemove.forEach(function (oldState, key) {\n            // Unsubscribe from an old state \n            oldState.unsubscribe();\n            // Notify subscribers to a store that a state has been removed\n            if (_this.has(key)) {\n                var newState = _this.getState(key);\n                _this.onStoreUpdate(key, newState.getValue());\n            }\n            // Rerender all components depending on this state\n            oldState.state.refresh();\n        });\n    };\n    Store.prototype.useState = function (key, config) {\n        if (config === void 0) { config = {}; }\n        var storeStateConfig = config;\n        var stateConfig = config;\n        var state = this.getState(key, storeStateConfig);\n        return state.useState(stateConfig);\n    };\n    Store.prototype.useReducer = function (reducer, key, config) {\n        if (config === void 0) { config = {}; }\n        var storeStateConfig = config;\n        var stateConfig = config;\n        var state = this.getState(key, storeStateConfig);\n        return state.useReducer(reducer, stateConfig);\n    };\n    return Store;\n}());\nexports.default = Store;\nfunction createStore(storeInitializer) {\n    // Create a store for key based state\n    return new Store(storeInitializer);\n}\nexports.createStore = createStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}